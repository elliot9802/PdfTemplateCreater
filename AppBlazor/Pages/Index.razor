@page "/"
@using Services
@inject HttpClient httpClient
@inject ConfigService configService

<div class="home-container">
    <section class="introduction">
        <h1>Välkommen till PDF-mallhanteraren</h1>
        <p>Skapa, hantera och distribuera PDF-mallar för olika artiklar, från evenemangsbiljetter till presentkort.</p>
    </section>

    <section class="features-overview">
        <h2>Nyckelfunktioner</h2>
        <ul>
            <li>Dynamisk skapande av PDF-mallar: Anpassa mallar efter dina artiklar med val för allt.</li>
            <li>Snabbt val av fördesignade mallar: Välj snabbt mellan våra redan skapade designmallar för varierande artiklar.</li>
            <li>Hantering av mallar: Uppdatera eller radera befintliga mallar enkelt.</li>
            <li>Hög prestanda: Generera PDF:er snabbt, även för stora partier.</li>
        </ul>
    </section>
</div>

@code {
    private ConfigService ConfigService => configService ?? throw new InvalidOperationException("ConfigService is not configured.");

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var requestUri = ConfigService.GetApiUrl($"/api/PdfTemplate/WarmUp");
            await httpClient.GetAsync(requestUri);
            Console.WriteLine("API and database warmed up successfully.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred during the warm-up process: {ex.Message}");
        }
    }

}
