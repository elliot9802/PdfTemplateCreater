@page "/get-tickets"
@using Services
@inject HttpClient HttpClient
@inject ConfigService configService

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h3>Hämta biljetter från större köp</h3>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="webbUidInput" class="form-label">User id</label>
                        <input type="text" class="form-control" id="webbUidInput" @bind="@webbUid" placeholder="Ange id för köpet">
                    </div>
                    <div class="mb-3">
                        <label for="ShowEventInfoNmr" class="form-label">ShowEventInfo Nummer</label>
                        <input type="text" class="form-control" id="ShowEventInfoNmr" @bind="@ShowEventInfoNmr" placeholder="Ange ShowEventInfo Nummer för köpet">
                    </div>
                    <button @onclick="PreviewTemplate" class="btn btn-primary"
                            disabled="@(isLoading || !webbUid.HasValue ? "disabled" : null)">
                        @if (isLoading)
                        {
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                <span>Laddar...</span>
                        }
                        else
                        {
                            <span>Visa biljetter</span>
                        }
                    </button>
                </div>
            </div>

            @if (!isLoading && !string.IsNullOrEmpty(pdfBase64))
            {
                <div>
                    <div class="mt-3 text-center">
                        <a href="@($"data:application/pdf;base64,{pdfBase64}")" class="btn btn-success" download="tickets.pdf">Ladda ner PDF</a>
                    </div>
                    <object data="@($"data:application/pdf;base64,{pdfBase64}")" style="width:100%; height:500px;" frameborder="0">
                        This browser does not support PDFs. Please download the PDF to view it:
                        <a href="@($"data:application/pdf;base64,{pdfBase64}")" download="tickets.pdf">Ladda ner PDF</a>.
                    </object>
                </div>
            }
            else if (!isLoading && !string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger mt-3" role="alert">
                    @ErrorMessage
                </div>
            }
            else if (!isLoading)
            {
                <p class="text-center mt-3">Alla biljetter kommer visas här...</p>
            }
        </div>
    </div>
</div>

@code {
    private ConfigService ConfigService => configService ?? throw new InvalidOperationException("ConfigService is not configured.");
    private string? pdfBase64;
    private Guid? webbUid;
    private int? ShowEventInfoNmr;
    private bool isLoading = false;
    public string? ErrorMessage { get; set; }

    private async Task PreviewTemplate()
    {
        isLoading = true;
        ErrorMessage = null;
        pdfBase64 = null;

        try
        {
            var requestUri = ConfigService.GetApiUrl($"/api/PdfTemplate/CreateCombinedPdf?webbUid={webbUid}&showEventInfo={ShowEventInfoNmr}");
            var emptyContent = new StringContent(string.Empty, System.Text.Encoding.UTF8, "application/json");
            var response = await HttpClient.PostAsync(requestUri, emptyContent);

            if (response.IsSuccessStatusCode)
            {
                var pdfData = await response.Content.ReadAsByteArrayAsync();
                pdfBase64 = Convert.ToBase64String(pdfData);
            }
            else
            {
                ErrorMessage = $"Failed to preview the template. Status: {response.StatusCode}";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "An error occurred while attempting to preview the template. Please try again.";
            Console.WriteLine($"Exception while calling PreviewTemplate API: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}
