@page "/existing-templates"
@using Models
@using Services
@using AppBlazor.Components
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject ConfigService ConfigService
@inject IJSRuntime JSRuntime
<h3>Existing Templates</h3>

@if (templates == null)
{
    <p><em>Loading templates...</em></p>
}
else
{
    <!-- File Upload Section -->
    <UserFileInputComponent OnFileUploaded="@HandleFileUploaded" />

    <div class="my-2">
        <select class="form-control" @onchange="OnTemplateSelected">
            <option value="">Välj en mall</option>
            @foreach (var template in templates.OrderBy(t => t.ShowEventInfo))
            {
                <!-- Pass ShowEventInfo as the value -->
                <option value="@template.ShowEventInfo">@($"Mall {template.ShowEventInfo} - {(template.ShowEventInfo <= 3 ? "Fördefinerad" : "Användartillagd")}: {template.Name}")</option>
            }
        </select>
    </div>

    <button class="btn btn-primary" @onclick="PreviewTemplate" disabled="@(!selectedShowEventInfo.HasValue || isLoading)">
        @if (isLoading)
        {
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            <span>Laddar...</span>
        }
        else
        {
            <span>Förhandsgranska</span>
        }
    </button>

    <button class="btn btn-secondary mx-2" @onclick="EditTemplate">Redigera vald mall</button>

    @if (!isPredefined && selectedTemplateId.HasValue)
    {
        <button class="btn btn-danger" @onclick="DeleteTemplate">Radera vald mall</button>
    }

    <!-- PDF Preview Section -->
    <PdfPreviewComponent PdfBase64="@pdfBase64" />

    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-danger mt-2" role="alert">
            @ErrorMessage
        </div>
    }
    <div id="temporaryMessage" class="alert alert-success mt-2" style="display: none;"></div>
}
<script>
    function showTemporaryMessage(message, duration) {
        var messageElement = document.getElementById('temporaryMessage');
        messageElement.innerText = message;
        messageElement.style.display = 'block';

        setTimeout(function () {
            messageElement.style.display = 'none';
        }, duration);
    }
</script>